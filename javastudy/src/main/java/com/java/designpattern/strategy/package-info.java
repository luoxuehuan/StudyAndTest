/**
 * 
 */
/**
 * @author lxh
 * 
 * 策略模式,封装算法
 * 
 * 策略模式简单的也可以用工厂方法来实现。但是频繁变化的，采用策略模式更佳。
 * 
 * 
 * 策略模式和工厂模式结合！
 * 简化客户端代码
 * 
 * 优点：
 * 策略模式封装了变化。  
 * 相同算法的不同实现。
 * 
 * 无法避免的switch该怎么解决呢? 不解决的话,添加一个策略就要改一次switch。
 * 用【反射】解决！ 
 * 
 * 场景：
 *
 */
package com.java.designpattern.strategy;